/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.Calculator;

import java.awt.*;
import javax.script.*;
import javax.swing.*;

/**
 *
 * @author TRANDAISON
 */
public class Calculator extends javax.swing.JFrame {

    /**
     * Creates new form Calculator
     */
    public Calculator() {
        initComponents();
        eCopyItem.setEnabled(false);
        ePasteItem.setEnabled(false);

        ImageIcon icon = new ImageIcon(getClass().getResource("res/icon.png"));
        Image image = icon.getImage();
        setIconImage(image);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        display = new javax.swing.JTextField();
        button7 = new javax.swing.JButton();
        button8 = new javax.swing.JButton();
        button9 = new javax.swing.JButton();
        buttonAC = new javax.swing.JButton();
        button4 = new javax.swing.JButton();
        button5 = new javax.swing.JButton();
        button6 = new javax.swing.JButton();
        buttonPlus = new javax.swing.JButton();
        buttonSub = new javax.swing.JButton();
        button1 = new javax.swing.JButton();
        button2 = new javax.swing.JButton();
        button3 = new javax.swing.JButton();
        button0 = new javax.swing.JButton();
        buttonDot = new javax.swing.JButton();
        buttonEqual = new javax.swing.JButton();
        buttonSqrt = new javax.swing.JButton();
        buttonMul = new javax.swing.JButton();
        buttonDiv = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        menuView = new javax.swing.JMenu();
        menuEdit = new javax.swing.JMenu();
        eCopyItem = new javax.swing.JMenuItem();
        ePasteItem = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        hHelpItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        hAboutItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(252, 192));

        display.setEditable(false);
        display.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        display.setText("0");
        display.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayActionPerformed(evt);
            }
        });

        button7.setBackground(new java.awt.Color(204, 204, 204));
        button7.setText("7");
        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });

        button8.setBackground(new java.awt.Color(204, 204, 204));
        button8.setText("8");
        button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button8ActionPerformed(evt);
            }
        });

        button9.setBackground(new java.awt.Color(204, 204, 204));
        button9.setText("9");
        button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button9ActionPerformed(evt);
            }
        });

        buttonAC.setBackground(new java.awt.Color(255, 102, 102));
        buttonAC.setText("AC/C");
        buttonAC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonACActionPerformed(evt);
            }
        });

        button4.setBackground(new java.awt.Color(204, 204, 204));
        button4.setText("4");
        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button4ActionPerformed(evt);
            }
        });

        button5.setBackground(new java.awt.Color(204, 204, 204));
        button5.setText("5");
        button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button5ActionPerformed(evt);
            }
        });

        button6.setBackground(new java.awt.Color(204, 204, 204));
        button6.setText("6");
        button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button6ActionPerformed(evt);
            }
        });

        buttonPlus.setBackground(new java.awt.Color(255, 204, 153));
        buttonPlus.setForeground(new java.awt.Color(0, 0, 153));
        buttonPlus.setText("+");
        buttonPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPlusActionPerformed(evt);
            }
        });

        buttonSub.setBackground(new java.awt.Color(255, 204, 153));
        buttonSub.setForeground(new java.awt.Color(0, 0, 153));
        buttonSub.setText("-");
        buttonSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSubActionPerformed(evt);
            }
        });

        button1.setBackground(new java.awt.Color(204, 204, 204));
        button1.setText("1");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        button2.setBackground(new java.awt.Color(204, 204, 204));
        button2.setText("2");
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        button3.setBackground(new java.awt.Color(204, 204, 204));
        button3.setText("3");
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        button0.setBackground(new java.awt.Color(204, 204, 204));
        button0.setText("0");
        button0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button0ActionPerformed(evt);
            }
        });

        buttonDot.setBackground(new java.awt.Color(204, 204, 204));
        buttonDot.setText(". ");
        buttonMul.setSize(41, 23);
        buttonDot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDotActionPerformed(evt);
            }
        });

        buttonEqual.setBackground(new java.awt.Color(255, 204, 153));
        buttonEqual.setText("=");
        buttonEqual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEqualActionPerformed(evt);
            }
        });

        buttonSqrt.setBackground(new java.awt.Color(255, 153, 153));
        buttonSqrt.setForeground(new java.awt.Color(0, 0, 153));
        buttonSqrt.setText("Sqrt");
        buttonSqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSqrtActionPerformed(evt);
            }
        });

        buttonMul.setBackground(new java.awt.Color(255, 204, 153));
        buttonMul.setForeground(new java.awt.Color(0, 0, 153));
        buttonMul.setText("* ");
        buttonMul.setSize(41, 23);
        buttonMul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMulActionPerformed(evt);
            }
        });

        buttonDiv.setBackground(new java.awt.Color(255, 204, 153));
        buttonDiv.setForeground(new java.awt.Color(0, 0, 153));
        buttonDiv.setText("/");
        buttonDiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDivActionPerformed(evt);
            }
        });

        menuView.setText("View");
        menuBar.add(menuView);

        menuEdit.setText("Edit");

        eCopyItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        eCopyItem.setText("Copy");
        eCopyItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eCopyItemActionPerformed(evt);
            }
        });
        menuEdit.add(eCopyItem);

        ePasteItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        ePasteItem.setText("Paste");
        ePasteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ePasteItemActionPerformed(evt);
            }
        });
        menuEdit.add(ePasteItem);

        menuBar.add(menuEdit);

        menuHelp.setText("Help");

        hHelpItem.setText("Help toptics");
        hHelpItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hHelpItemActionPerformed(evt);
            }
        });
        menuHelp.add(hHelpItem);
        menuHelp.add(jSeparator1);

        hAboutItem.setText("About Calculator");
        hAboutItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hAboutItemActionPerformed(evt);
            }
        });
        menuHelp.add(hAboutItem);

        menuBar.add(menuHelp);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonAC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonPlus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonSub))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonDot)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonEqual)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonSqrt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonMul)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonDiv))
                    .addComponent(display))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(display, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button7)
                    .addComponent(button8)
                    .addComponent(button9)
                    .addComponent(buttonAC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button4)
                    .addComponent(button5)
                    .addComponent(button6)
                    .addComponent(buttonPlus)
                    .addComponent(buttonSub))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button1)
                    .addComponent(button2)
                    .addComponent(button3)
                    .addComponent(buttonMul)
                    .addComponent(buttonDiv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button0)
                    .addComponent(buttonDot)
                    .addComponent(buttonEqual)
                    .addComponent(buttonSqrt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void displayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayActionPerformed

    private void button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button7ActionPerformed
        // Kiem tra neu vua bam nut [ = ] hoac [sqrt] thi reset lai displayField
        if (haveJustEqual || haveJustSqrt || error) {
            display.setText("");
            buttonDot.setEnabled(true);
        }

        // Neu dong text qua 32 ky tu thi thong bao tran
        if (display.getText().length() >= 32) {
            JOptionPane.showMessageDialog(null, "Tràn Bộ nhớ!\nBiểu thức quá dài hoặc số quá lớn!\nRất xin lỗi vì sự bất tiện này!", "Thông báo", 1);
        } else {
            // Neu dang o man hinh cho (so 0) thi reset man hinh de hien thi so vua nhap
            if (display.getText().equals("0")) {
                display.setText("");
            }
            // Noi so vua bam vao chuoi tren man hinh va update len man hinh
            display.setText(String.valueOf(display.getText().concat("7")));
        }

        // Tra 2 bien nho ve lai gia tri false
        haveJustClear = false;
        haveJustClickOperator = false;
        haveJustEqual = false;
        haveJustSqrt = false;
        haveJustDot = false;
//        haveJustPlus = false;
//        haveJustSub = false;
//        haveJustMul = false;
//        haveJustDiv = false;
    }//GEN-LAST:event_button7ActionPerformed

    private void button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button8ActionPerformed
        if (haveJustEqual || haveJustSqrt || error) {
            display.setText("");
            buttonDot.setEnabled(true);
        }

        if (display.getText().length() >= 32) {
            JOptionPane.showMessageDialog(null, "Tràn Bộ nhớ!\nBiểu thức quá dài hoặc số quá lớn!\nRất xin lỗi vì sự bất tiện này!", "Thông báo", 1);
        } else {
            if (display.getText().equals("0")) {
                display.setText("");
            }
            display.setText(String.valueOf(display.getText().concat("8")));
        }

        haveJustClear = false;
        haveJustClickOperator = false;
        haveJustEqual = false;
        haveJustSqrt = false;
        haveJustDot = false;
//        haveJustPlus = false;
//        haveJustSub = false;
//        haveJustMul = false;
//        haveJustDiv = false;
    }//GEN-LAST:event_button8ActionPerformed

    private void button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button9ActionPerformed
        if (haveJustEqual || haveJustSqrt || error) {
            display.setText("");
            buttonDot.setEnabled(true);
        }

        if (display.getText().length() >= 32) {
            JOptionPane.showMessageDialog(null, "Tràn Bộ nhớ!\nBiểu thức quá dài hoặc số quá lớn!\nRất xin lỗi vì sự bất tiện này!", "Thông báo", 1);
        } else {
            if (display.getText().equals("0")) {
                display.setText("");
            }
            display.setText(String.valueOf(display.getText().concat("9")));
        }

        haveJustClear = false;
        haveJustClickOperator = false;
        haveJustEqual = false;
        haveJustSqrt = false;
        haveJustDot = false;
//        haveJustPlus = false;
//        haveJustSub = false;
//        haveJustMul = false;
//        haveJustDiv = false;
    }//GEN-LAST:event_button9ActionPerformed

    private void buttonACActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonACActionPerformed
        buttonDot.setEnabled(true);
        error = false;

        if (haveJustClear || haveJustEqual || haveJustSqrt) {
            display.setText("0");
            error = false;
        } else {
            String scrText = display.getText();
            char lastChar = scrText.charAt(scrText.length() - 1);
            String strLastChar = String.valueOf(lastChar);
            if ("+".equals(strLastChar) || "-".equals(strLastChar) || "*".equals(strLastChar) || "/".equals(strLastChar) || ".".equals(strLastChar)) {
                display.setText(String.valueOf(Process.backspaceOperator(scrText)));
                haveJustClear = true;
            } else {
                display.setText(String.valueOf(Process.backspaceString(scrText)));
                haveJustClear = true;
            }
        }
        // Tra cac bien kiem tra ve lai mac dinh
        haveJustSqrt = false;
        haveJustEqual = false;
        haveJustDot = false;
        haveJustPlus = false;
        haveJustSub = false;
        haveJustMul = false;
        haveJustDiv = false;
        dotPlace = -1;
        haveJustClickOperator = false;

    }//GEN-LAST:event_buttonACActionPerformed

    private void button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button4ActionPerformed
        if (haveJustEqual || haveJustSqrt || error) {
            display.setText("");
            buttonDot.setEnabled(true);
        }

        if (display.getText().length() >= 32) {
            JOptionPane.showMessageDialog(null, "Tràn Bộ nhớ!\nBiểu thức quá dài hoặc số quá lớn!\nRất xin lỗi vì sự bất tiện này!", "Thông báo", 1);
        } else {
            if (display.getText().equals("0")) {
                display.setText("");
            }
            display.setText(String.valueOf(display.getText().concat("4")));
        }

        haveJustClear = false;
        haveJustClickOperator = false;
        haveJustEqual = false;
        haveJustSqrt = false;
        haveJustDot = false;
//        haveJustPlus = false;
//        haveJustSub = false;
//        haveJustMul = false;
//        haveJustDiv = false;
    }//GEN-LAST:event_button4ActionPerformed

    private void button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button5ActionPerformed
        if (haveJustEqual || haveJustSqrt || error) {
            display.setText("");
            buttonDot.setEnabled(true);
        }

        if (display.getText().length() >= 32) {
            JOptionPane.showMessageDialog(null, "Tràn Bộ nhớ!\nBiểu thức quá dài hoặc số quá lớn!\nRất xin lỗi vì sự bất tiện này!", "Thông báo", 1);
        } else {
            if (display.getText().equals("0")) {
                display.setText("");
            }
            display.setText(String.valueOf(display.getText().concat("5")));
        }

        haveJustClear = false;
        haveJustClickOperator = false;
        haveJustEqual = false;
        haveJustSqrt = false;
        haveJustDot = false;
//        haveJustPlus = false;
//        haveJustSub = false;
//        haveJustMul = false;
//        haveJustDiv = false;
    }//GEN-LAST:event_button5ActionPerformed

    private void button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button6ActionPerformed
        if (haveJustEqual || haveJustSqrt || error) {
            display.setText("");
            buttonDot.setEnabled(true);
        }

        if (display.getText().length() >= 32) {
            JOptionPane.showMessageDialog(null, "Tràn Bộ nhớ!\nBiểu thức quá dài hoặc số quá lớn!\nRất xin lỗi vì sự bất tiện này!", "Thông báo", 1);
        } else {
            if (display.getText().equals("0")) {
                display.setText("");
            }
            display.setText(String.valueOf(display.getText().concat("6")));
        }

        haveJustClear = false;
        haveJustClickOperator = false;
        haveJustEqual = false;
        haveJustSqrt = false;
        haveJustDot = false;
//        haveJustPlus = false;
//        haveJustSub = false;
//        haveJustMul = false;
//        haveJustDiv = false;
    }//GEN-LAST:event_button6ActionPerformed

    private void buttonPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPlusActionPerformed
        buttonDot.setEnabled(true);
        if (copied) {
            ePasteItem.setEnabled(true);
        }

        // Neu ky tu cuoi dang la dau "." thi xoa di
        if (haveJustDot) {
            display.setText(String.valueOf(Process.backOneChar(display.getText())));
        }

        if (haveJustClickOperator || error) {
            display.setText(String.valueOf(display.getText().concat("")));
        } else {
            if (display.getText().length() >= 32) {
                JOptionPane.showMessageDialog(null, "Tràn Bộ nhớ!\nBiểu thức quá dài hoặc số quá lớn!\nRất xin lỗi vì sự bất tiện này!", "Thông báo", 1);
            } else {
                display.setText(String.valueOf(display.getText().concat("+")));
                haveJustPlus = true;
            }
        }

        pasted = false;
        haveJustClear = false;
        haveJustEqual = false;
        haveJustSqrt = false;
        haveJustDot = false;

        haveJustSub = false;
        haveJustMul = false;
        haveJustDiv = false;
        haveJustClickOperator = true;
        haveJustClickOperatorB = false;
    }//GEN-LAST:event_buttonPlusActionPerformed

    private void buttonSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSubActionPerformed
        buttonDot.setEnabled(true);
        if (copied) {
            ePasteItem.setEnabled(true);
        }

        // Neu ky tu cuoi dang la dau "." thi xoa di
        if (haveJustDot) {
            display.setText(String.valueOf(Process.backOneChar(display.getText())));
        }

        if (haveJustClickOperator || error) {
            if (haveJustClickOperatorB) {
                
                if (error || haveJustSub || display.getText().charAt(display.getText().length()-1) == '-') {
                    display.setText(String.valueOf(display.getText().concat("")));
                } else {
                    display.setText(String.valueOf(display.getText().concat("-")));
                    haveJustSub = true;
                }
            } else {
                display.setText(String.valueOf(display.getText().concat("")));
            }
        } else {
            if (display.getText().length() >= 32) {
                JOptionPane.showMessageDialog(null, "Tràn Bộ nhớ!\nBiểu thức quá dài hoặc số quá lớn!\nRất xin lỗi vì sự bất tiện này!", "Thông báo", 1);
            } else {
                if (display.getText().equals("0")) {
                    display.setText("");
                }
                display.setText(String.valueOf(display.getText().concat("-")));
                haveJustSub = true;
            }
        }

        pasted = false;
        haveJustClear = false;
        haveJustEqual = false;
        haveJustSqrt = false;
        haveJustDot = false;
        haveJustPlus = false;

        haveJustMul = false;
        haveJustDiv = false;
        haveJustClickOperator = true;
        haveJustClickOperatorB = false;
    }//GEN-LAST:event_buttonSubActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        if (haveJustEqual || haveJustSqrt || error) {
            display.setText("");
            buttonDot.setEnabled(true);
        }

        if (display.getText().length() >= 32) {
            JOptionPane.showMessageDialog(null, "Tràn Bộ nhớ!\nBiểu thức quá dài hoặc số quá lớn!\nRất xin lỗi vì sự bất tiện này!", "Thông báo", 1);
        } else {
            if (display.getText().equals("0")) {
                display.setText("");
            }
            display.setText(String.valueOf(display.getText().concat("1")));
        }

        haveJustClear = false;
        haveJustClickOperator = false;
        haveJustEqual = false;
        haveJustSqrt = false;
        haveJustDot = false;
//        haveJustPlus = false;
//        haveJustSub = false;
//        haveJustMul = false;
//        haveJustDiv = false;
    }//GEN-LAST:event_button1ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        if (haveJustEqual || haveJustSqrt || error) {
            display.setText("");
            buttonDot.setEnabled(true);
        }

        if (display.getText().length() >= 32) {
            JOptionPane.showMessageDialog(null, "Tràn Bộ nhớ!\nBiểu thức quá dài hoặc số quá lớn!\nRất xin lỗi vì sự bất tiện này!", "Thông báo", 1);
        } else {
            if (display.getText().equals("0")) {
                display.setText("");
            }
            display.setText(String.valueOf(display.getText().concat("2")));
        }

        haveJustClear = false;
        haveJustClickOperator = false;
        haveJustEqual = false;
        haveJustSqrt = false;
        haveJustDot = false;
//        haveJustPlus = false;
//        haveJustSub = false;
//        haveJustMul = false;
//        haveJustDiv = false;
    }//GEN-LAST:event_button2ActionPerformed

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        if (haveJustEqual || haveJustSqrt || error) {
            display.setText("");
            buttonDot.setEnabled(true);
        }

        if (display.getText().length() >= 32) {
            JOptionPane.showMessageDialog(null, "Tràn Bộ nhớ!\nBiểu thức quá dài hoặc số quá lớn!\nRất xin lỗi vì sự bất tiện này!", "Thông báo", 1);
        } else {
            if (display.getText().equals("0")) {
                display.setText("");
            }
            display.setText(String.valueOf(display.getText().concat("3")));
        }

        haveJustClear = false;
        haveJustClickOperator = false;
        haveJustEqual = false;
        haveJustSqrt = false;
        haveJustDot = false;
//        haveJustPlus = false;
//        haveJustSub = false;
//        haveJustMul = false;
//        haveJustDiv = false;
    }//GEN-LAST:event_button3ActionPerformed

    private void button0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button0ActionPerformed
        if (haveJustEqual || haveJustSqrt || error) {
            display.setText("0");
            buttonDot.setEnabled(true);
        }

        if (display.getText().length() >= 32) {
            JOptionPane.showMessageDialog(null, "Tràn Bộ nhớ!\nBiểu thức quá dài hoặc số quá lớn!\nRất xin lỗi vì sự bất tiện này!", "Thông báo", 1);
        } else {
            if (display.getText().equals("0")) {
                display.setText("");
            }
            display.setText(String.valueOf(display.getText().concat("0")));
        }

        haveJustClear = false;
        haveJustClickOperator = false;
        haveJustEqual = false;
        haveJustSqrt = false;
        haveJustDot = false;
//        haveJustPlus = false;
//        haveJustSub = false;
//        haveJustMul = false;
//        haveJustDiv = false;
    }//GEN-LAST:event_button0ActionPerformed

    private void buttonDotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDotActionPerformed
        ePasteItem.setEnabled(false);

        if (display.getText().length() >= 32) {
            JOptionPane.showMessageDialog(null, "Tràn Bộ nhớ!\nBiểu thức quá dài hoặc số quá lớn!\nRất xin lỗi vì sự bất tiện này!", "Thông báo", 1);
        } else {
            // Kiem tra neu toan hang co chua 1 dau "." roi thi disable buttonDot
            String checkDot = display.getText();
            dotPlace = checkDot.indexOf(".");

            char lastChar = checkDot.charAt(checkDot.length() - 1);
            String strLastChar = String.valueOf(lastChar);
            if (strLastChar.equals("+") || strLastChar.equals("-") || strLastChar.equals("*") || strLastChar.equals("/")) {
                display.setText(String.valueOf(display.getText().concat("0")));
                haveJustDot = true;
            }

            // Neu khong chua dau "."
            if (dotPlace == -1) {
                display.setText(String.valueOf(display.getText().concat(".")));
                // Sau khi noi dau "." vao xau tren man hinh thi disable buttonDot
                buttonDot.setEnabled(false);
                haveJustDot = true;
            } else {
                dotPlace = checkDot.indexOf(".", dotPlace + 1);
                if (haveJustPlus || haveJustSub || haveJustMul || haveJustDiv) {
                    buttonDot.setEnabled(true);
                    display.setText(String.valueOf(display.getText().concat(".")));
                    buttonDot.setEnabled(false);
                    haveJustDot = true;
                }
            }

            // Neu khong roi vao cac truong hop tren
            if (haveJustDot) {
                String str = display.getText();
                int lastPlus = str.lastIndexOf("+");
                int lastSub = str.lastIndexOf("-");
                int lastMul = str.lastIndexOf("*");
                int lastDiv = str.lastIndexOf("/");
                int lastOperatorIndex = Math.max(Math.max(lastPlus, lastSub), Math.max(lastMul, lastDiv));
                if (lastOperatorIndex != -1) {
                    lastChar = str.charAt(str.length() - 1);
                    strLastChar = String.valueOf(lastChar);
                    if (!strLastChar.equals(".")) {
                        display.setText(String.valueOf(display.getText().concat(".")));
                    }
                    //display.setText(String.valueOf(display.getText().concat(".")));
                }
            }
        }

        haveJustClear = false;
        haveJustEqual = false;
        haveJustSqrt = false;
        haveJustPlus = false;
        haveJustSub = false;
        haveJustMul = false;
        haveJustDiv = false;
        haveJustClickOperator = false;
    }//GEN-LAST:event_buttonDotActionPerformed

    private void buttonEqualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEqualActionPerformed
        String scrText = display.getText();

        // Chuan hoa xau vao
        char lastChar = scrText.charAt(scrText.length() - 1);
        // Neu ky tu cuoi la toan tu nghia la {+, -, *, /}= sesult
        // Neu lastChar khong phai toan tu thi tra ket qua tinh toan ve result
        // else thi lay result ra va lam tiep cho toan tu cuoi cung
        boolean _isPlus = false;
        if (lastChar == '+') {
            _isPlus = true;
        }

        boolean _isSub = false;
        if (lastChar == '-') {
            _isSub = true;
        }

        boolean _isMul = false;
        if (lastChar == '*') {
            _isMul = true;
        }

        boolean _isDiv = false;
        if (lastChar == '/') {
            _isDiv = true;
        }

        if (_isPlus || _isSub || _isMul || _isDiv) {
            display.setText(String.valueOf(Process.backOneChar(scrText)));
        }

        scrText = display.getText();
        double result;
        String strResult = "";

        try {
            strResult = String.valueOf(Process.doCalc(scrText));
        } catch (ScriptException ex) {
            strResult = "Error!";
            noCopy = true;
            error = true;
            buttonDot.setEnabled(false);
        }

        if (strResult.equals("Error!")) {
            noCopy = true;
            error = true;
            buttonDot.setEnabled(false);
        } else {
            try {
                result = Double.parseDouble(strResult);

                // Kiem tra hau to cua bieu thuc
                if (_isPlus) {
                    result += result;
                }

                if (_isSub) {
                    result -= result;
                }

                if (_isMul) {
                    result *= result;
                }

                if (_isDiv) {
                    result /= result;
                }
                error = false;
                display.setText(String.valueOf(result));
            } catch (NumberFormatException e) {
            }
        }

        buttonDot.setEnabled(false);
        pasted = false;
        eCopyItem.setEnabled(true);
        haveJustClear = false;
        haveJustEqual = true;
        haveJustClickOperator = false;
    }//GEN-LAST:event_buttonEqualActionPerformed

    private void buttonSqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSqrtActionPerformed
        // Neu ky tu cuoi dang la dau "." thi xoa di
        if (haveJustDot) {
            display.setText(String.valueOf(Process.backOneChar(display.getText())));
        }

        try {
            double tmp = Double.parseDouble(display.getText());
            if (tmp > 0) {
                display.setText(String.valueOf(Math.sqrt(Double.parseDouble(display.getText()))));
            } else {
                display.setText(String.valueOf("Error!"));
                noCopy = true;
                error = true;
                buttonDot.setEnabled(false);
            }
        } catch (NumberFormatException e) {
            display.setText(String.valueOf("Error!"));
            noCopy = true;
            error = true;
            buttonDot.setEnabled(false);
        }

        buttonDot.setEnabled(false);
        eCopyItem.setEnabled(true);
        pasted = false;
        haveJustClear = false;
        haveJustSqrt = true;
        haveJustClickOperator = false;
    }//GEN-LAST:event_buttonSqrtActionPerformed

    private void buttonMulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMulActionPerformed
        buttonDot.setEnabled(true);
        if (copied) {
            ePasteItem.setEnabled(true);
        }

        // Neu ky tu cuoi dang la dau "." thi xoa di
        if (haveJustDot) {
            display.setText(String.valueOf(Process.backOneChar(display.getText())));
        }

        if (haveJustClickOperator || error) {
            display.setText(String.valueOf(display.getText().concat("")));
        } else {
            if (display.getText().length() >= 32) {
                JOptionPane.showMessageDialog(null, "Tràn Bộ nhớ!\nBiểu thức quá dài hoặc số quá lớn!\nRất xin lỗi vì sự bất tiện này!", "Thông báo", 1);
            } else {
                display.setText(String.valueOf(display.getText().concat("*")));
                haveJustMul = true;
            }
        }

        pasted = false;
        haveJustClear = false;
        haveJustEqual = false;
        haveJustSqrt = false;
        haveJustDot = false;
        haveJustPlus = false;
        haveJustSub = false;

        haveJustDiv = false;
        haveJustClickOperator = true;
        haveJustClickOperatorB = true;
    }//GEN-LAST:event_buttonMulActionPerformed

    private void buttonDivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDivActionPerformed
        buttonDot.setEnabled(true);
        if (copied) {
            ePasteItem.setEnabled(true);
        }

        // Neu ky tu cuoi dang la dau "." thi xoa di
        if (haveJustDot) {
            display.setText(String.valueOf(Process.backOneChar(display.getText())));
        }

        if (haveJustClickOperator || error) {
            display.setText(String.valueOf(display.getText().concat("")));
            haveJustDiv = false;
        } else {
            if (display.getText().length() >= 32) {
                JOptionPane.showMessageDialog(null, "Tràn Bộ nhớ!\nBiểu thức quá dài hoặc số quá lớn!\nRất xin lỗi vì sự bất tiện này!", "Thông báo", 1);
                haveJustDiv = false;
            } else {
                display.setText(String.valueOf(display.getText().concat("/")));
                haveJustDiv = true;
            }
        }

        pasted = false;
        haveJustClear = false;
        haveJustEqual = false;
        haveJustSqrt = false;
        haveJustDot = false;
        haveJustPlus = false;
        haveJustSub = false;
        haveJustMul = false;

        haveJustClickOperator = true;
        haveJustClickOperatorB = true;
    }//GEN-LAST:event_buttonDivActionPerformed

    private void hHelpItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hHelpItemActionPerformed
        HelpCalc help = new HelpCalc();
        help.setTitle("Help");
        help.setLocationRelativeTo(this);
        help.setResizable(false);
        help.setAlwaysOnTop(true);
        help.setVisible(true);
    }//GEN-LAST:event_hHelpItemActionPerformed

    private void hAboutItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hAboutItemActionPerformed
        AboutCalc about = new AboutCalc();
        about.setTitle("About Calculator");
        about.setLocationRelativeTo(this);
        about.setResizable(false);
        about.setAlwaysOnTop(true);
        about.setVisible(true);
    }//GEN-LAST:event_hAboutItemActionPerformed

    private void eCopyItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eCopyItemActionPerformed
        clipboard = display.getText();

        eCopyItem.setEnabled(false);
        ePasteItem.setEnabled(true);
        copied = true;
        pasted = false;
    }//GEN-LAST:event_eCopyItemActionPerformed

    private void ePasteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ePasteItemActionPerformed
        if (pasted) {
            ePasteItem.setEnabled(false);
        } else {
            // De tranh truong hop VD: 12."paste" (paste = 3.14) <<= 2 dau cham
            if (!haveJustDot) {
                // Kiem tra neu display dang la so 0 thi xoa so 0 roi moi noi clipboard vao
                String scrText = display.getText();
                if (scrText.equals("0") || haveJustEqual || haveJustSqrt) {
                    display.setText("");
                }
                display.setText(String.valueOf(display.getText().concat(clipboard)));
            }
            pasted = true;
        }
    }//GEN-LAST:event_ePasteItemActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button0;
    private javax.swing.JButton button1;
    private javax.swing.JButton button2;
    private javax.swing.JButton button3;
    private javax.swing.JButton button4;
    private javax.swing.JButton button5;
    private javax.swing.JButton button6;
    private javax.swing.JButton button7;
    private javax.swing.JButton button8;
    private javax.swing.JButton button9;
    private javax.swing.JButton buttonAC;
    private javax.swing.JButton buttonDiv;
    private javax.swing.JButton buttonDot;
    private javax.swing.JButton buttonEqual;
    private javax.swing.JButton buttonMul;
    private javax.swing.JButton buttonPlus;
    private javax.swing.JButton buttonSqrt;
    private javax.swing.JButton buttonSub;
    private javax.swing.JTextField display;
    private javax.swing.JMenuItem eCopyItem;
    private javax.swing.JMenuItem ePasteItem;
    private javax.swing.JMenuItem hAboutItem;
    private javax.swing.JMenuItem hHelpItem;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenu menuView;
    // End of variables declaration//GEN-END:variables

    private boolean haveJustClear = false;
    private boolean haveJustSqrt = false;
    private boolean haveJustEqual = false;
    private boolean haveJustDot = false;
    private boolean haveJustPlus = false;
    private boolean haveJustSub = false;
    private boolean haveJustMul = false;
    private boolean haveJustDiv = false;
    private boolean haveJustClickOperator = false;
    private int dotPlace = -1;

    private String clipboard;
    private boolean copied;
    private boolean pasted;
    private boolean noCopy;
    private boolean haveJustClickOperatorB; // Vi sau dau * co the la dau am (-)
    private boolean error;
}


/* Công việc ngày mai: 28/6
 * Khắc phục lỗi bấm 2 toán hạng liên tục
 * Nút AC/C
 *      Nếu nhấn 1 lần mà trong biểu thức đang nhập số hạng thì xóa số hạng vừa nhập (Clear)
 *      Nếu nhấn 1 lần mà trước đó vừa nhấn dấu = hoặc sqrt thì reset màn hình
 *      Nếu nhấn 2 lần thì reset màn hình
 * Lỗi khi nhập 1 biểu thức, sau đó nhấn sqrt
 */
